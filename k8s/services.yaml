apiVersion: v1
kind: ConfigMap
metadata:
  name: services-config
data:
  NODE_ENV: "production"
  CONSUL_HOST: "consul"
  CONSUL_PORT: "8500"
  KONG_ADMIN_URL: "http://kong:8001"
  RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672"
  SMTP_HOST: "postfix"
  SMTP_PORT: "25"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: frontend:latest
          ports:
            - containerPort: 80
          env:
            - name: VITE_API_URL
              value: "http://kong:8000/api"
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  ports:
    - port: 3001
  selector:
    app: user-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: user-service:latest
          ports:
            - containerPort: 3001
          env:
            - name: PORT
              value: "3001"
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres@user-db:5432/transport_user"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
          envFrom:
            - configMapRef:
                name: services-config
---
# Similar services and deployments for other microservices
apiVersion: v1
kind: Service
metadata:
  name: route-service
spec:
  ports:
    - port: 3002
  selector:
    app: route-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: route-service
spec:
  selector:
    matchLabels:
      app: route-service
  template:
    metadata:
      labels:
        app: route-service
    spec:
      containers:
        - name: route-service
          image: route-service:latest
          ports:
            - containerPort: 3002
          env:
            - name: PORT
              value: "3002"
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres@route-db:5432/transport_route"
          envFrom:
            - configMapRef:
                name: services-config