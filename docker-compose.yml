version: '3.9'

services:
  consul:
    image: consul:1.15.4
    ports:
      - "8500:8500"
    command: "agent -dev -client=0.0.0.0"
    networks:
      - mynet
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    image: kong:latest
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    environment:
      KONG_PROXY_LISTEN: "0.0.0.0:8000,0.0.0.0:8443 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    depends_on:
      consul:
        condition: service_healthy
    networks:
      - mynet
    volumes:
      - ./kong.yml:/etc/kong/kong.yml
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postfix:
    image: quay.io/panubo/postfix:latest
    environment:
      MAILNAME: "localhost"
      RELAYHOST_AUTH: 'no'
      RELAYHOST: ''
      SMTP_TLS_SECURITY_LEVEL: "may"
    ports:
      - "25:25"
    networks:
      - mynet
    # healthcheck:
    #   test: ["CMD", "netstat", "-an", "|", "grep", "25"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mynet
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transport_user
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - mynet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  route-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transport_route
    volumes:
      - route_db_data:/var/lib/postgresql/data
    networks:
      - mynet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  payment-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transport_payment
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - mynet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  subscription-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transport_subscription
    volumes:
      - subscription_db_data:/var/lib/postgresql/data
    networks:
      - mynet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  notification-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transport_notification
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - mynet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      kong:
        condition: service_healthy
    networks:
      - mynet

  user-service:
    build: ./user-service
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@user-db:5432/transport_user
      - JWT_SECRET=your-super-secret-key-change-in-production
      - PORT=3001
      - SERVICE_NAME=user-service
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - KONG_ADMIN_URL=http://kong:8001
    depends_on:
      user-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      kong:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mynet

  route-service:
    build: ./route-service
    restart: always
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@route-db:5432/transport_route
      - PORT=3002
      - SERVICE_NAME=route-service
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - KONG_ADMIN_URL=http://kong:8001
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      route-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      kong:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mynet

  payment-service:
    build: ./payment-service
    restart: always
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@payment-db:5432/transport_payment
      - PORT=3003
      - SERVICE_NAME=payment-service
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - KONG_ADMIN_URL=http://kong:8001
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      payment-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      kong:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mynet

  subscription-service:
    build: ./subscription-service
    restart: always
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@subscription-db:5432/transport_subscription
      - PORT=3004
      - SERVICE_NAME=subscription-service
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - KONG_ADMIN_URL=http://kong:8001
    depends_on:
      subscription-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      kong:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mynet

  notification-service:
    build: ./notification-service
    restart: always
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@notification-db:5432/transport_notification
      - PORT=3005
      - SERVICE_NAME=notification-service
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - KONG_ADMIN_URL=http://kong:8001
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - SMTP_HOST=0.0.0.0
      - SMTP_PORT=25
      - SMTP_USER=transport@noreply.ma
    depends_on:
      notification-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      kong:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      postfix :
        condition: service_started
      # postfix:
      #   condition: service_healthy
    networks:
      - mynet

volumes:
  rabbitmq_data:
  user_db_data:
  route_db_data:
  payment_db_data:
  subscription_db_data:
  notification_db_data:

networks:
  mynet:
    driver: bridge